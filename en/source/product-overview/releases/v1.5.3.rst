v1.5.3 发版说明
===============

发布日期：2024-05-10

版本号：v1.5.3

HashData Lightning v1.5.3 新增了若干功能。

新功能
------

.. list-table::
   :header-rows: 1
   :align: left

   * - 类别
     - 功能
     - 用户文档
   * - 数据分析
     - 支持使用 Directory Table 纳管非结构化文件的元数据，以对非结构化数据进行存储和管理。
     - :ref:`使用目录表纳管非结构化文件 <operate-with-data/advanced-data-analytics/directory-tables:使用目录表纳管非结构化文件>`
   * - 数据分析
     - 支持位图压缩算法 RoaringBitMap。
     - :ref:`RoaringBitMap 位图运算 <operate-with-data/advanced-data-analytics/roaringbitmap:使用 roaringbitmap 位图运算>`
   * - 存储引擎
     - 支持 PAX 数据库存储格式。
     - :ref:`PAX 存储格式 <operate-with-data/operate-with-database-objects/choose-table-storage-models/pax-table-format:pax 存储格式>`
   * - 内核增强
     - Vectorization 支持 Numeric 数据类型。
     - :ref:`Vectorization 向量化查询计算 <operate-with-data/advanced-data-analytics/vectorization-queries:vectorization 向量化查询计算>`
   * - 安全审计
     - 支持日志审计功能。
     - :ref:`日志审计 pgAudit <manage-system/set-security-and-permission/use-pgaudit:日志审计 pgaudit>`


新功能的详细说明如下：

数据分析
~~~~~~~~

- **支持使用 Directory Table 纳管非结构化文件的元数据。**

  自 v1.5.3 起，HashData Lightning 支持一种 Directory Table 表，用于纳管多种类型的非结构化数据。开发者用户只需使用简单的 SQL 语句就能调用各种计算引擎的能力（例如 HashML 的机器学习能力、Vector 的向量化处理能力、Elastic Search 的全文搜索能力），实现一站式数据加工和应用开发。

  Directory Table 定位于存储、管理和分析非结构化数据对象。Directory Table 位于表空间中，将非结构化数据文件导入 Directory Table 后，会在 Directory Table 上创建一条记录，即该文件的元数据信息，而文件本身则加载进对象存储中。表上的元数据与对象存储上的对应文件相关联。

  详情参见文档\ :ref:`使用目录表纳管非结构化文件 <operate-with-data/advanced-data-analytics/directory-tables:使用目录表纳管非结构化文件>`\ 。

- **支持位图压缩算法 RoaringBitMap。**

  RoaringBitMap 是一种高效的 Bitmap（位图）压缩算法，其在各种编程语言和大数据平台中已获广泛应用。自 v1.5.3 起，通过整合 RoaringBitmap 功能，HashData Lightning 提供了一种原生的数据库数据类型，支持丰富的数据库函数、操作符和聚合操作。

  RoaringBitmap 优于传统的压缩 Bitmap，如 WAH、EWAH 或 Concise，尤其在性能方面表现突出。在某些情况下，RoaringBitmap 的处理速度可以比传统压缩方法快数百倍，同时提供更优的压缩效率，甚至在某些应用场景中，其性能还能超越未压缩的 Bitmap。这种位计算的高效性特别适合进行大数据基数计算，常用于数据去重、标签筛选和时间序列等复杂计算。

  详情参见文档\ :ref:`operate-with-data/advanced-data-analytics/roaringbitmap:使用 roaringbitmap 位图运算`\ 。

存储引擎
~~~~~~~~

- **支持 PAX 数据库存储格式。**

  PAX (Partition Attributes Across) 是一种数据库存储格式，它结合了行式存储和列式存储的优点，旨在提高数据库的查询性能，尤其是在缓存效率方面。在 OLAP 场景下，PAX 拥有媲美行式存储的批量写入性能和列式存储的读取性能。PAX 既能适应云环境下基于对象存储的存储模型，也能适应于线下传统基于物理文件的存储方式。自 v1.5.3 起，HashData Lightning 支持 PAX 存储格式。

  详情参见文档\ :ref:`operate-with-data/operate-with-database-objects/choose-table-storage-models/pax-table-format:PAX 存储格式`\ 。

内核增强
~~~~~~~~

- **Vectorization 支持 Numeric 数据类型。**

  对比浮点数据类型，Numeric 类型可以在运算过程中，保证一致的数据精度。对于数据精度要求较高的场景，用户可以创 Numeric 类型，查询过程利用向量化进行加速。

  详情参见文档\ :ref:`operate-with-data/advanced-data-analytics/vectorization-queries:Vectorization 向量化查询计算`\ 。

安全审计
~~~~~~~~

- **支持日志审计功能。**

  日志审计扩展 pgAudit 通过标准的 PostgreSQL 日志记录功能提供详细的会话或对象审计日志记录。

  pgAudit 的目标是为用户提供生成审计日志的能力，这些日志通常需要符合政府、财务或 ISO 认证。审计是对个人或组织账户的官方检查，通常由独立机构进行。

  详情参见文档\ :ref:`manage-system/set-security-and-permission/use-pgaudit:日志审计 pgaudit`\ 。

变更说明
--------

相比 v1.5.2，v1.5.3 无任何 SQL 语法变更、功能变更说明、参数变更说明。

Bug 修复
--------

相比 v1.5.2，v1.5.3 无 Bug 修复。
